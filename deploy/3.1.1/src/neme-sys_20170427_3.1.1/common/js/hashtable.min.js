function Hashtable(){this.hashtable=new Array()}Hashtable.prototype.clear=function(){this.hashtable=new Array()};Hashtable.prototype.containsKey=function(b){var c=false;for(var a in this.hashtable){if(a==b&&this.hashtable[a]!=null){c=true;break}}return c};Hashtable.prototype.containsValue=function(c){var b=false;if(c!=null){for(var a in this.hashtable){if(this.hashtable[a]==c){b=true;break}}}return b};Hashtable.prototype.get=function(a){return this.hashtable[a]};Hashtable.prototype.isEmpty=function(){return(this.size==0)?true:false};Hashtable.prototype.keys=function(){var b=new Array();for(var a in this.hashtable){if(this.hashtable[a]!=null){b.push(a)}}return b};Hashtable.prototype.put=function(a,b){if(a==null||b==null){throw"NullPointerException {"+a+"},{"+b+"}"}else{this.hashtable[a]=b}};Hashtable.prototype.remove=function(a){var b=this.hashtable[a];this.hashtable[a]=null;return b};Hashtable.prototype.size=function(){var b=0;for(var a in this.hashtable){if(this.hashtable[a]!=null){b++}}return b};Hashtable.prototype.values=function(){return this.hashtable};Hashtable.prototype.toArray=function(){var b=new Array();for(var a in this.hashtable){b[b.length]=this.hashtable[a]}return b};